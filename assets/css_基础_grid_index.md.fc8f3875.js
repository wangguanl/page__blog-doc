import{_ as i,v as l,b as a,R as e}from"./chunks/framework.4f207390.js";const m=JSON.parse('{"title":"grid","description":"","frontmatter":{},"headers":[],"relativePath":"css/基础/grid/index.md","filePath":"css/基础/grid/index.md","lastUpdated":1676540167000}'),t={name:"css/基础/grid/index.md"},r=e('<h1 id="grid" tabindex="-1"><code>grid</code> <a class="header-anchor" href="#grid" aria-label="Permalink to &quot;`grid`&quot;">​</a></h1><p><a href="/page__blog-doc/css/基础/grid/show">演示</a></p><h2 id="grid-是一个二维布局" tabindex="-1"><code>grid</code> 是一个二维布局 <a class="header-anchor" href="#grid-是一个二维布局" aria-label="Permalink to &quot;`grid` 是一个二维布局&quot;">​</a></h2><h2 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h2><ul><li>容器（container）</li><li>项（item）（每一项元素）</li><li>行（row）</li><li>列（column）</li><li>间距（gap）</li><li>区域（area）</li><li>内容（content）</li><li>网格线（columns line）</li></ul><h2 id="容器属性" tabindex="-1">容器属性 <a class="header-anchor" href="#容器属性" aria-label="Permalink to &quot;容器属性&quot;">​</a></h2><ol><li>grid-template-columns（定义列存放多少项）</li><li>grid-template-rows（定义行存放多少项）</li><li>grid-row-gap ( row-gap )（行间距）</li><li>grid-column-gap ( column-gap )（列间距）</li><li>grid-gap ( gap )（网格间距：行、列组合）</li><li>grid-template-areas</li><li>grid-auto-flow</li><li>justify-items</li><li>align-items</li><li>place-items(8、9组合属性)</li><li>justify-content</li><li>align-content</li><li>place-content(11、12组合属性)</li><li>grid-auto-columns</li><li>grid-auto-rows</li></ol>',7),o=[r];function d(s,n,c,g,h,p){return l(),a("div",null,o)}const _=i(t,[["render",d]]);export{m as __pageData,_ as default};
