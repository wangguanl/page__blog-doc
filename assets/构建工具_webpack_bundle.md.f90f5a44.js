import{_ as e,v as a,b as r,R as t}from"./chunks/framework.4f207390.js";const f=JSON.parse('{"title":"bundle 分析(bundle analysis)","description":"","frontmatter":{},"headers":[],"relativePath":"构建工具/webpack/bundle.md","filePath":"构建工具/webpack/bundle.md","lastUpdated":1661762982000}'),l={name:"构建工具/webpack/bundle.md"},n=t('<h1 id="bundle-分析-bundle-analysis" tabindex="-1">bundle 分析(bundle analysis) <a class="header-anchor" href="#bundle-分析-bundle-analysis" aria-label="Permalink to &quot;bundle 分析(bundle analysis)&quot;">​</a></h1><p>一旦开始分离代码，一件很有帮助的事情是，分析输出结果来检查模块在何处结束。 <a href="https://github.com/webpack/analyse" target="_blank" rel="noreferrer">官方分析工具</a> 是一个不错的开始。还有一些其他社区支持的可选项：</p><ul><li><a href="https://alexkuz.github.io/webpack-chart/" target="_blank" rel="noreferrer">webpack-chart</a>: webpack stats 可交互饼图。</li><li><a href="https://chrisbateman.github.io/webpack-visualizer/" target="_blank" rel="noreferrer">webpack-visualizer</a>: 可视化并分析你的 bundle，检查哪些模块占用空间，哪些可能是重复使用的。</li><li><a href="https://github.com/webpack-contrib/webpack-bundle-analyzer" target="_blank" rel="noreferrer">webpack-bundle-analyzer</a>：一个 plugin 和 CLI 工具，它将 bundle 内容展示为一个便捷的、交互式、可缩放的树状图形式。</li><li><a href="https://webpack.jakoblind.no/optimize" target="_blank" rel="noreferrer">webpack bundle optimize helper</a>：这个工具会分析你的 bundle，并提供可操作的改进措施，以减少 bundle 的大小。</li><li><a href="https://github.com/bundle-stats/bundle-stats" target="_blank" rel="noreferrer">bundle-stats</a>：生成一个 bundle 报告（bundle 大小、资源、模块），并比较不同构建之间的结果。</li></ul><p>接下来，查看 <a href="https://webpack.docschina.org/guides/lazy-loading/" target="_blank" rel="noreferrer">延迟加载</a> 来学习如何在实际一个真实应用程序中使用 <code>import()</code> 的具体示例</p><h2 id="further-reading" tabindex="-1">Further Reading <a class="header-anchor" href="#further-reading" aria-label="Permalink to &quot;Further Reading&quot;">​</a></h2><ul><li><a href="https://medium.com/webpack/link-rel-prefetch-preload-in-webpack-51a52358f84c" target="_blank" rel="noreferrer">webpack 中的 </a></li><li><a href="https://medium.com/reloading/preload-prefetch-and-priorities-in-chrome-776165961bbf" target="_blank" rel="noreferrer">Chrome 中的预加载、预获取和优先级(Preload, Prefetch And Priorities)</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Preloading_content" target="_blank" rel="noreferrer">使用用 预加载内容</a></li></ul>',6),i=[n];function b(d,o,s,c,h,u){return a(),r("div",null,i)}const k=e(l,[["render",b]]);export{f as __pageData,k as default};
