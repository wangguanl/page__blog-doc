import{_ as e,v as a,b as t,R as r}from"./chunks/framework.4f207390.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"其他/技术博客/evanyou-2022-report.md","filePath":"其他/技术博客/evanyou-2022-report.md","lastUpdated":1674186044000}'),o={name:"其他/技术博客/evanyou-2022-report.md"},i=r('<p><a href="https://juejin.cn/post/7183705937180524601" target="_blank" rel="noreferrer">转载文章：尤雨溪：回顾2022，展望2023 - 掘金</a></p><p>2023 年 1 月 1 日，尤雨溪发布博客 <strong>《2022 Year In Review》，</strong> 文中回顾了 2022 年发生的事，并讨论了 2023 年的期望。下面就来看看详细内容吧！</p><h2 id="回顾-2022-年" tabindex="-1">回顾 2022 年 <a class="header-anchor" href="#回顾-2022-年" aria-label="Permalink to &quot;回顾 2022 年&quot;">​</a></h2><p>2022 年 2 月，Vue.js 团队将 Vue 的默认版本切换为 3.x。 这标志着框架 v3 版本的所有官方部分都已经准备就绪，包括对提供最新最佳实践指南的文档进行了重大修改。</p><p>现在仍处于生态系统迁移到 Vue 3 的过渡期。因此，在切换之后，Vue.js 团队更专注于通过投资工具来改善 Vue 开发人员的体验。团队成员一直积极参与 Vite 的开发，通过发布 Volar 1.0，对 Vue 的 IDE 和 TypeScript 支持进行了重大改进。</p><p>在 2022 年，Vue 3 的 NPM 使用率增长了近 200%。 在社区方面，Vue 3 生态系统现在已经成熟，提供了有助于提高生产力的出色解决方案。 Nuxt 3 和 Vuetify 3 均在 2022 年 11 月达到稳定状态，NativeScript for Vue 3 最近推出了测试版。 此外，还有很多已经支持 Vue 3 相当长一段时间的伟大项目：Quasar、NaiveUI、Ionic Vue、PrimeVue、InkLine、Element Plus 等。</p><p>尽管 Vue 3 现在是默认版本，但是由于迁移成本的原因，许多用户不得不继续使用 Vue 2。 为了确保 Vue 2 用户从框架的进步中受益，Vue.js 团队决定将 Vue 2 的源代码迁移到 TypeScript，并在 Vue 2.7 中向后移植了一些重要的 Vue 3 功能。 并且确保 Vite、Vue Devtools 和 Volar 都同时支持 Vue 2 和 Vue 3。</p><h2 id="展望-2023-年" tabindex="-1">展望 2023 年 <a class="header-anchor" href="#展望-2023-年" aria-label="Permalink to &quot;展望 2023 年&quot;">​</a></h2><h3 id="更小和更频繁的次要版本" tabindex="-1">更小和更频繁的次要版本 <a class="header-anchor" href="#更小和更频繁的次要版本" aria-label="Permalink to &quot;更小和更频繁的次要版本&quot;">​</a></h3><p>随着最后一个 Vue 2 次要版本 (2.7) 的发布，预计将在 2023 年全速推出 Vue 3 核心的功能。</p><p>Vue.js 想要改进的一件事就是发布节奏。 Vue 遵循 semver，这意味着应该只发布次要版本的功能。 过去，采用了“大次要”的方法，将许多功能组合在一个大的、不频繁发布的次要版本中。这导致在处理其他高复杂性功能时，相当多的低复杂性功能被阻碍。 <strong>在 2023 年，希望发布更小、更频繁的次要版本，以便能够更快地推出更多功能。</strong></p><p>这也意味着将调整 v3.3 中的内容。原本计划在 v3.3 中将 Suspense 和 Reactivity Transform 从实验状态结束。但是，Vue.js 团队认为两者仍需要进一步的 RFC 讨论，并且它们不应阻碍其他更直接的功能落地。 现在，v3.3 的目标是实现明确且不需要 RFC 讨论的提议/计划功能。例如，支持 <code>&lt;script setup&gt;</code> 宏中的外部导入类型。</p><p>与此同时，Vue.js 团队将：</p><ul><li>进一步评估 Suspense 和 Reactivity Transform 的准备情况；</li><li>评估未完成的用户提交的 RFC 和功能请求；</li><li>发布计划在 3.4 及更高版本中实现的功能的 RFC，例如 SSR 懒惰水合。</li></ul><p>另一件需要注意的事情是，在可预见的未来，没有重大突破性变化的计划。意识到用户在 v2 到 v3 过渡期间面临的挑战，希望 Vue 有一个更好的长期升级过程。</p><h3 id="vapor-mode" tabindex="-1">Vapor Mode <a class="header-anchor" href="#vapor-mode" aria-label="Permalink to &quot;Vapor Mode&quot;">​</a></h3><p>Vapor Mode 是一直在试验的另一种编译策略，其灵感来自于 Solid。 给定相同的 Vue SFC，与当前基于虚拟 DOM 的输出相比，Vapor Mode 将其编译成性能更高、使用更少内存且需要更少运行时支持代码的 JavaScript 输出。 它仍处于早期阶段，这里有一些相关的要点：</p><ul><li>Vapor Mode 适用于主要关注性能的用例。它是可选的，不会影响现有的代码库。</li><li>开发者将能够将 Vapor 组件子树嵌入到任何现有的 Vue 3 应用中。在理想情况下，希望可以在组件级别实现粒度选择，这意味着可以在同一个应用中自由混合 Vapor 组件和非 Vapor 组件。</li><li>仅使用 Vapor 组件构建应用允许从 bundle 中删除虚拟 DOM 运行时，从而显着减少 baseline 运行时大小。</li><li>为了获得最佳性能，Vapor Mode 将仅支持 Vue 功能的一个子集。特别是，Vapor Mode 组件将仅支持 Composition API 和 <code>&lt;script setup&gt;</code>。 但是，这个受支持的子集在 Vapor 和非 Vapor 组件之间的工作方式完全相同。</li></ul><h2 id="会议" tabindex="-1">会议 <a class="header-anchor" href="#会议" aria-label="Permalink to &quot;会议&quot;">​</a></h2><p>2023 年将有许多<strong>面对面</strong>的 Vue 会议：</p><ul><li>Vue.js Amsterdam：2 月 9 日至 10 日，荷兰阿姆斯特丹；</li><li>Vue.js Live：5 月 12 日至 15 日，英国伦敦；</li><li>VueConf US：5 月 24 日至 26 日，美国新奥尔良；</li><li>VueFes Japan：10 月 28 日，日本东京。</li></ul><p>尤雨溪计划亲自参与所有这些活动，在缺席三年之后，迫不及待想要再次见到社区！</p><h2 id="距-vue-2-结束支持剩余一年" tabindex="-1">距 Vue 2 结束支持剩余一年 <a class="header-anchor" href="#距-vue-2-结束支持剩余一年" aria-label="Permalink to &quot;距 Vue 2 结束支持剩余一年&quot;">​</a></h2><p>今天距离 Vue 2 结束支持恰好剩余一年。Vue.js 团队创建了一个页面来解释这一点的含义，并概述了那些希望在结束支持日期之后使用 Vue 2 的开发者的选项：<a href="https://link.juejin.cn?target=https%3A%2F%2Fv2.vuejs.org%2Flts%2F" title="https://v2.vuejs.org/lts/" target="_blank" rel="noreferrer">Vue 2 结束支持和扩展支持的详细信息。</a></p><blockquote><p><strong>原文：</strong> <a href="https://link.juejin.cn?target=https%3A%2F%2Fblog.vuejs.org%2Fposts%2F2022-year-in-review.html" title="https://blog.vuejs.org/posts/2022-year-in-review.html" target="_blank" rel="noreferrer">blog.vuejs.org/posts/2022-…</a></p></blockquote>',25),s=[i];function u(l,p,n,V,d,h){return a(),t("div",null,s)}const m=e(o,[["render",u]]);export{v as __pageData,m as default};
