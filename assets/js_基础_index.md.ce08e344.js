import{_ as a,v as e,b as t,R as o}from"./chunks/framework.4f207390.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"js/基础/index.md","filePath":"js/基础/index.md","lastUpdated":1663119548000}'),r={name:"js/基础/index.md"},n=o('<h2 id="基本类型" tabindex="-1">基本类型 <a class="header-anchor" href="#基本类型" aria-label="Permalink to &quot;基本类型&quot;">​</a></h2><p>Number、String、Null、Undefined、Boolean、Symbol</p><h2 id="引用类型" tabindex="-1">引用类型 <a class="header-anchor" href="#引用类型" aria-label="Permalink to &quot;引用类型&quot;">​</a></h2><p>Object、Array</p><h2 id="typeof" tabindex="-1">typeof <a class="header-anchor" href="#typeof" aria-label="Permalink to &quot;typeof&quot;">​</a></h2><p>只能判断基本类型和引用类型，无法得知更具体的类型。</p><h2 id="instanceof" tabindex="-1">instanceof <a class="header-anchor" href="#instanceof" aria-label="Permalink to &quot;instanceof&quot;">​</a></h2><p>相当于 arr.constructor,把要判断的类型指向构造函数,看是否一致,但是再不同的作用域指针会出现不相等,因为作用域指针不相等</p><h2 id="this-指针作用域" tabindex="-1">this 指针作用域 <a class="header-anchor" href="#this-指针作用域" aria-label="Permalink to &quot;this 指针作用域&quot;">​</a></h2>',9),s=[n];function i(d,h,l,c,p,f){return e(),t("div",null,s)}const m=a(r,[["render",i]]);export{b as __pageData,m as default};
