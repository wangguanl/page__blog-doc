import{_ as e,v as o,b as t,R as a}from"./chunks/framework.4f207390.js";const u=JSON.parse('{"title":"浏览器创建可视化3D交互场景","description":"","frontmatter":{},"headers":[],"relativePath":"框架/web3D/index.md","filePath":"框架/web3D/index.md","lastUpdated":1691747497000}'),d={name:"框架/web3D/index.md"},r=a('<h1 id="浏览器创建可视化3d交互场景" tabindex="-1">浏览器创建可视化3D交互场景 <a class="header-anchor" href="#浏览器创建可视化3d交互场景" aria-label="Permalink to &quot;浏览器创建可视化3D交互场景&quot;">​</a></h1><h2 id="webgl是什么" tabindex="-1"><code>WebGL</code>是什么 <a class="header-anchor" href="#webgl是什么" aria-label="Permalink to &quot;`WebGL`是什么&quot;">​</a></h2><p><strong><code>WebGL</code></strong> 源于 <strong><code>OpenGL</code></strong> 与 <strong><code>JS</code></strong> 的绑定</p><ul><li><strong><code>OpenGL</code></strong>：用于渲染2D、3D矢量图形的跨语言、跨平台的应用程序<strong>编程接口</strong>。</li></ul><h2 id="为什么使用-webgl-快" tabindex="-1">为什么使用 <code>WebGL</code>：快 <a class="header-anchor" href="#为什么使用-webgl-快" aria-label="Permalink to &quot;为什么使用 `WebGL`：快&quot;">​</a></h2><p>软件绘制：<code>canvas2D</code>: CPU -&gt; 内存 硬件绘制：<code>WebGL</code>: GPU -&gt; 显存</p><h2 id="坐标系-x、y、z" tabindex="-1">坐标系: x、y、z <a class="header-anchor" href="#坐标系-x、y、z" aria-label="Permalink to &quot;坐标系: x、y、z&quot;">​</a></h2><p>左手：<code>DirectX</code>、<code>Babylonjs</code>、<code>Unity</code>、<code>UE4</code> 右手(Z值越大距离摄像机越近)：<code>WebGl</code>、<code>ThreeJs</code>、<code>3DMax</code></p><h2 id="线性代数" tabindex="-1">线性代数 <a class="header-anchor" href="#线性代数" aria-label="Permalink to &quot;线性代数&quot;">​</a></h2><p>将<strong>几何</strong>与<strong>代数</strong>在线性代数做了统一</p><ul><li><code>Vector</code> 矢量 根据 <strong>点<code>point</code></strong> <strong>线<code>line</code></strong> <strong>面<code>face</code></strong> <strong>体<code>geometry</code></strong> 的组成，可以表示三维空间</li><li><code>Matrix</code> 矩阵 控制由矢量组成的物体，<strong>移动</strong>、<strong>旋转</strong>、<strong>缩放</strong></li></ul>',11),n=[r];function c(s,i,l,g,h,b){return o(),t("div",null,n)}const x=e(d,[["render",c]]);export{u as __pageData,x as default};
