import{_ as e,v as n,b as s,F as l,L as t}from"./chunks/framework.4f207390.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"js/runtime/事件冒泡、事件捕获、事件委托.md","filePath":"js/runtime/事件冒泡、事件捕获、事件委托.md","lastUpdated":1660298300000}'),_={name:"js/runtime/事件冒泡、事件捕获、事件委托.md"},a=l("ul",null,[l("li",null,[t("联系 "),l("ul",null,[l("li",null,"都是 事件触发时序问题 的术语。"),l("li",null,"绑定事件方法（ addEventListener） 的第三个参数是控制事件触发顺序的， 默认为false， 即事件冒泡； 若为true, 即事件捕获。")])]),l("li",null,[t("区别 "),l("ul",null,[l("li",null,"事件冒泡： 从触发事件的那个节点一直到document， 是自下而上的去触发事件。"),l("li",null,"事件捕获： 从document到触发事件的那个节点， 即自上而下的去触发事件。"),l("li",null,"事件委托：利用事件冒泡的原理。当有多个类似元素需要绑定事件时， 一个一个去绑定既浪费时间， 又不利于性能， 这时候可以使用事件委托， 给他们的一个共同父级元素添加一个事件函数去处理他们所有的事件情况。")])])],-1),u=[a];function i(r,o,d,c,m,p){return n(),s("div",null,u)}const v=e(_,[["render",i]]);export{h as __pageData,v as default};
