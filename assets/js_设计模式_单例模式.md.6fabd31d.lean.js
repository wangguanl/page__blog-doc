import{_ as e,v as a,b as s,F as t,L as r}from"./chunks/framework.4f207390.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"js/设计模式/单例模式.md","filePath":"js/设计模式/单例模式.md","lastUpdated":1692174619000}'),i={name:"js/设计模式/单例模式.md"},n=t("p",null,[r("应用这个模式时，单例对象的类必须保证只有一个实例存在。整个系统只需要拥有一个的全局对象，这样有利于我们协调系统整体的行为。 "),t("a",{href:"https://zh.wikipedia.org/wiki/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noreferrer"},"https://zh.wikipedia.org/wiki/单例模式"),t("a",{href:"https://baike.baidu.com/item/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/5946627?fr=aladdin",target:"_blank",rel:"noreferrer"},"https://baike.baidu.com/item/单例模式/5946627?fr=aladdin")],-1),o=t("ul",null,[t("li",null,"饿汉模式：指全局的单例实例在第一次被使用时构建"),t("li",null,"懒汉模式：指全局的单例实例在类装载时构建。")],-1),l=[n,o];function d(_,p,c,h,f,m){return a(),s("div",null,l)}const b=e(i,[["render",d]]);export{E as __pageData,b as default};
